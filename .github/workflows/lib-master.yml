name: CI-FOR-LIB-MASTER

on: 
  push:
    branches:
      - lib-master

jobs:
  build-cimgui-libs-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'true'
    - name: build
      run: |
        export SRC=./
        export BUILD=build
        cmake --no-warn-unused-cli -DCMAKE_POSITION_INDEPENDENT_CODE:BOOL=true -DCMAKE_BUILD_TYPE=Release -S ${SRC} -B ${SRC}/${BUILD} && cmake --build ${SRC}/${BUILD} -j 10
        ls -alh ${BUILD}
    - name: Expose as artifact
      uses: actions/upload-artifact@v2
      with:
        name: cimgui-libs-linux
        path: build/cimgui.so
    
    - name: build-libvan-sdk-android-armv7
      run: |
        wget https://dl.google.com/android/repository/android-ndk-r21e-linux-x86_64.zip
        sudo apt-get install -y unzip
        unzip android-ndk-r21e-linux-x86_64.zip
        export ANDROID_NDK=$(pwd)/android-ndk-r21e
        rm -rf build/*
        export SRC=./
        export BUILD=build
        cmake --no-warn-unused-cli -DCMAKE_POSITION_INDEPENDENT_CODE:BOOL=true -DCMAKE_BUILD_TYPE=Release -S ${SRC} -B ${SRC}/${BUILD} -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK/build/cmake/android.toolchain.cmake -DANDROID_ABI="armeabi-v7a" -DANDROID_NDK=$ANDROID_NDK -DANDROID_PLATFORM=android-22 && cmake --build ${SRC}/${BUILD} -j 10
        ls -alh ${BUILD}

    - name: Expose as artifact
      uses: actions/upload-artifact@v2
      with:
        name: cimgui-libs-android-armv7
        path: build/cimgui.so
    
    - name: build-libvan-sdk-android-armv8
      run: |
        export ANDROID_NDK=$(pwd)/android-ndk-r21e
        rm -rf build/*
        export SRC=./
        export BUILD=build
        cmake --no-warn-unused-cli -DCMAKE_POSITION_INDEPENDENT_CODE:BOOL=true -DCMAKE_BUILD_TYPE=Release -S ${SRC} -B ${SRC}/${BUILD} -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK/build/cmake/android.toolchain.cmake -DANDROID_ABI="arm64-v8a" -DANDROID_NDK=$ANDROID_NDK -DANDROID_PLATFORM=android-22 && cmake --build ${SRC}/${BUILD} -j 10
        ls -alh ${BUILD}

    - name: Expose as artifact
      uses: actions/upload-artifact@v2
      with:
        name: cimgui-libs-android-armv8
        path: build/cimgui.so

  build-cimgui-libs-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'true'
    - name: build
      run: |
        md build
        cmake --no-warn-unused-cli -DCMAKE_POSITION_INDEPENDENT_CODE:BOOL=true -S ./ -B build
        cmake --build build/ --config Release --target cimgui
        dir build\Release
    - name: Expose as artifact
      uses: actions/upload-artifact@v2
      with:
        name: cimgui-libs-windows
        path: build/Release/cimgui.dll
  
  build-cimgui-libs-osx:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'true'
    - name: build
      run: |
        export SRC=./
        export BUILD=build
        cmake --no-warn-unused-cli -DCMAKE_POSITION_INDEPENDENT_CODE:BOOL=true -DCMAKE_BUILD_TYPE=Release -S ${SRC} -B ${SRC}/${BUILD} && cmake --build ${SRC}/${BUILD} -j 10
        ls -alh ${BUILD}/
    - name: Expose as artifact
      uses: actions/upload-artifact@v2
      with:
        name: cimgui-libs-osx
        path: build/cimgui.dylib
